# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ stable , develop , new-github-actions ]
  pull_request:
    branches: [ stable , develop , new-github-actions ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      UIMA_VERSION: ${{ '2.10.4' }}
      UIMA_HOME: ${{ '~/apache-uima' }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Cache Apache UIMA
      uses: actions/cache@v2
      with:
        path: ~/apache-uima
        key: ${{ runner.os }}-uima-${{ env.UIMA_VERSION }}
        restore-keys: ${{ runner.os }}-uima
    - name: Download Apache UIMA
      run: if [ ! -d ~/apache-uima ]; then curl -fsSL --output uimaj-${{ env.UIMA_VERSION }}-bin.zip https://downloads.apache.org/uima/uimaj-${{ env.UIMA_VERSION }}/uimaj-${{ env.UIMA_VERSION }}-bin.zip && unzip uimaj-${{ env.UIMA_VERSION }}-bin.zip; fi
      working-directory: ~/
    - name: Build with Maven
      run: mvn --batch-mode package --file pom.xml
      working-directory: apache-uima
    - name: Copy jars
      run: mkdir ${{ github.workspace }}/staging && cp target/*.jar ${{ github.workspace }}/staging
      working-directory: apache-uima
    - uses: actions/upload-artifact@v2
      with:
        ## TODO - pull version number from pom.xml
        name: decovri_vSNAPSHOT_${{ runner.os }}
        path: ${{ github.workspace }}/staging
