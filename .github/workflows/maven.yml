# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ stable , develop , new-github-actions ]
  pull_request:
    branches: [ stable , develop , new-github-actions ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      UIMA_VERSION: ${{ '2.10.4' }}
      UIMA_HOME: ${{ '~/apache-uima' }}
      CONCEPTMAPPER_VERSION: ${{ '2.10.2' }}
      CONCEPTMAPPER_HOME: ${{ '~/ConceptMapper' }}
      CTAKES_VERSION: ${{ '4.0.0.1' }}
      CTAKES_HOME: ${{ '~/apache-ctakes' }}
      OPENNLP_MODELS_VERSION: ${{ '1.5' }}
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    ################################
    ## Apache UIMA
    - name: Cache Apache UIMA
      uses: actions/cache@v2
      id: cache-apache-uima
      with:
        path: ~/apache-uima
        key: ${{ runner.os }}-uima-${{ env.UIMA_VERSION }}
        restore-keys: ${{ runner.os }}-uima
    - name: Download Apache UIMA
      uses: carlosperate/download-file-action@v1.0.3
      if: steps.cache-apache-uima.outputs.cache-hit != 'true'
      with:
        file-url: 'https://downloads.apache.org/uima/uimaj-${{ env.UIMA_VERSION }}/uimaj-${{ env.UIMA_VERSION }}-bin.tar.gz'
        file-name: 'uimaj-${{ env.UIMA_VERSION }}-bin.tar.gz'
        location: '~/'
    - name: Unpack Apache UIMA
      if: steps.cache-apache-uima.outputs.cache-hit != 'true'
      run: tar -zxf '~/uimaj-${{ env.UIMA_VERSION }}-bin.tar.gz'
    ################################
    ## Apache ConceptMapper
    - name: Cache Apache ConceptMapper
      uses: actions/cache@v2
      id: cache-conceptmapper
      with:
        path: ~/ConceptMapper
        key: ${{ runner.os }}-conceptmapper-${{ env.CONCEPTMAPPER_VERSION }}
        restore-keys: ${{ runner.os }}-conceptmapper
    - name: Download and Unpack Apache ConceptMapper
      if: steps.cache-conceptmapper.outputs.cache-hit != 'true'
      run: |
        cd $RUNNER_TEMP
        curl -Lfs --output 'ConceptMapper-${{ env.CONCEPTMAPPER_VERSION }}-bin.tar.gz' 'https://downloads.apache.org/uima/uima-addons/ConceptMapper-${{ env.CONCEPTMAPPER_VERSION }}/ConceptMapper-${{ env.CONCEPTMAPPER_VERSION }}-bin.tar.gz'
        mkdir ~/ConceptMapper
        cd ~/ConceptMapper
        tar -zxf $RUNNER_TEMP/ConceptMapper-${{ env.CONCEPTMAPPER_VERSION }}-bin.tar.gz
    ################################
    ## Apache cTAKES
    - name: Cache Apache cTAKES
      uses: actions/cache@v2
      id: cache-apache-ctakes
      with:
        path: ~/apache-ctakes
        key: ${{ runner.os }}-ctakes-${{ env.CTAKES_VERSION }}
        restore-keys: ${{ runner.os }}-ctakes
    - name: Download and Unpack Apache cTAKES
      if: steps.cache-apache-ctakes.outputs.cache-hit != 'true'
      run: |
        cd $RUNNER_TEMP
        curl -Lfs --output 'apache-ctakes-${{ env.CTAKES_VERSION }}-bin.tar.gz' 'https://mirror.nodesdirect.com/apache//ctakes/ctakes-${{ env.CTAKES_VERSION }}/apache-ctakes-${{ env.CTAKES_VERSION }}-bin.tar.gz'
        tar -zxf apache-ctakes-${{ env.CTAKES_VERSION }}-bin.tar.gz
        mv apache-ctakes-${{ env.CTAKES_VERSION }} ~/apache-ctakes
    ################################
    ## Apache cTAKES Models
    - name: Cache cTAKES Models
      uses: actions/cache@v2
      id: cache-ctakes-models
      with:
        path: ${{ github.workspace }}/apache-uima/resources/ctakesModels
        key: ${{ runner.os }}-ctakes-models-${{ env.CTAKES_VERSION }}
        restore-keys: ${{ runner.os }}-ctakes-models
    - name: Download and Unpack cTAKES Models
      if: steps.cache-ctakes-models.outputs.cache-hit != 'true'
      run: |
        mkdir -p ${{ github.workspace }}/apache-uima/resources/ctakesModels
        cd ${{ github.workspace }}/apache-uima/resources/ctakesModels
        curl -Lfs --output 'sd-med-model.zip' 'https://github.com/apache/ctakes/tree/trunk/ctakes-core-res/src/main/resources/org/apache/ctakes/core/sentdetect/sd-med-model.zip'
    ################################
    ## OpenNLP Models
    - name: Cache OpenNLP Models
      uses: actions/cache@v2
      id: cache-opennlp-models
      with:
        path: ${{ github.workspace }}/apache-uima/resources/openNlpModels
        key: ${{ runner.os }}-opennlp-models-${{ env.OPENNLP_MODELS_VERSION }}
        restore-keys: ${{ runner.os }}-opennlp-models
    - name: Download and Unpack OpenNLP Models
      if: steps.cache-opennlp-models.outputs.cache-hit != 'true'
      run: |
        mkdir -p ${{ github.workspace }}/apache-uima/resources/openNlpModels
        cd ${{ github.workspace }}/apache-uima/resources/openNlpModels
        curl -Lfs --output 'en-token.bin' 'http://opennlp.sourceforge.net/models-1.5/en-token.bin'
        curl -Lfs --output 'en-pos-maxent.bin' 'http://opennlp.sourceforge.net/models-1.5/en-pos-maxent.bin'
    ################################
    ## mvn package
    - name: Build with Maven
      run: mvn --batch-mode package --file pom.xml
      working-directory: apache-uima
    - name: Copy jars and resources
      run: |
        mkdir -p ${{ github.workspace }}/staging
        cp target/*.jar ${{ github.workspace }}/staging
        cp -a resources ${{ github.workspace }}/staging/.
      working-directory: apache-uima
    - uses: actions/upload-artifact@v2
      with:
        ## TODO - pull version number from pom.xml
        name: decovri_vSNAPSHOT_${{ runner.os }}
        path: ${{ github.workspace }}/staging
